'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = transformFunction;

var _babelCore = require('babel-core');

var babel = _interopRequireWildcard(_babelCore);

var _transform = require('./transform');

var _transform2 = _interopRequireDefault(_transform);

var _GEN_ID = require('./GEN_ID');

var _GEN_ID2 = _interopRequireDefault(_GEN_ID);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var t = babel.types;
function transformFunction(name) {
  var funcParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  var typeParameters = arguments[2];

  var args = t.tupleTypeAnnotation(funcParams.map(function (a) {
    return a.typeAnnotation.typeAnnotation;
  }));

  var fnName = _GEN_ID2.default + '__' + name;

  var fn = (0, _transform2.default)(fnName, args, typeParameters);

  return babel.template('FUNC; ' + name + '.asGenerator = ' + fnName + ';')({
    FUNC: fn
  });
}